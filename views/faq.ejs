<h2>Frequently Asked Questions</h2>
<div class="layout">
    <div class="accordion"> 
        <div class="accordion__question"> 
            <p>How to check this youtube video is deepfake or not?</p> 
        </div> 
        <div class="accordion__answer"> 
            <p>
                To verify a YouTube video for deepfake content, begin by downloading the video to your device. Then visit our 
                Deepfake Detection page. Use the media input option to upload or drag and drop the video. If the system confirms 
                that the media follows our accepted guidelines (detailed in the documentation page), proceed by clicking the 
                Process button. The system will then analyze the video, and after a short wait, display the result directly on 
                your screen. Ensure the media is properly formatted and clear for best accuracy.
            </p>
        </div> 
    </div>
    <div class="accordion"> 
        <div class="accordion__question"> 
            <p>How to check this facebook video is deepfake or not?</p> 
        </div> 
        <div class="accordion__answer"> 
            <p>
                To analyze a Facebook video for deepfake detection, first check the Facebook input option available on the Deepfake 
                Detection page. If functional, simply paste the Facebook post URL and proceed. If the feature is unavailable or inactive, 
                manually download the video to your device. Then return to the detection page, drag and drop the file into the input box, 
                and click the Process button. If the media is accepted (as per guidelines listed on our Docs page), the system will analyze 
                it and display the result shortly. Ensure video clarity for more accurate detection.
            </p>
        </div> 
    </div>
    <div class="accordion"> 
        <div class="accordion__question"> 
            <p>Is Cavernous Hoax Scanner safe platform for image detection</p> 
        </div> 
        <div class="accordion__answer"> 
            <p>
                Yes, Cavernous Hoax Scanner (CHS) is a highly secure platform designed with robust privacy and encryption standards. It uses 
                end-to-end encryption to ensure that all media shared between the user and the server is protected within a secured session-based 
                channel. Once a user uploads any media, it is first converted into a base64-encoded format and transmitted using a unique hashing 
                key. This mechanism ensures that if any tampering occurs during transit, the file becomes invalid, making it unreadable to any 
                third party. Similarly, when the server sends back the result, it applies a hashing function to maintain data integrity during 
                response delivery. All static resources like webpages and web components are shared over SHA-256-based secured layers to prevent 
                any interception. Most importantly, CHS does not log, store, or archive user-submitted data. The server forgets the media and 
                result immediately after task completion, guaranteeing that no trace of sensitive content remains. Only the user and the server 
                participate in the transaction, making CHS an exceptionally private and trustworthy solution for deepfake image or video detection.
            </p>
        </div> 
    </div>
    <div class="accordion"> 
        <div class="accordion__question"> 
            <p>How can i get a public api for use cavernous in my web?</p> 
        </div> 
        <div class="accordion__answer"> 
            <p>
                You can access the public API for Cavernous Hoax Scanner completely free of cost. To get started, simply visit 
                our API page at <a href="https://chsweb.vercel.app/api">API Page</a> and click on the Quick Start button. Next, choose your preferred 
                programming language from the API generator interface—such as JavaScript—and fill in any additional required 
                information shown on the screen. Once done, click the Generate button to instantly receive a ready-to-use code 
                snippet tailored to your selected language. This allows seamless integration into your application or website. 
                For more in-depth technical guidance, examples, or special use cases, we highly recommend exploring the official 
                documentation provided on our Docs page.
            </p>
        </div> 
    </div>
    <div class="accordion"> 
        <div class="accordion__question"> 
            <p>How Cavernous Hoax Scanner work, what is the mechinisum of it?</p> 
        </div> 
        <div class="accordion__answer"> 
            <p>
                Cavernous Hoax Scanner operates through a multi-layered and secure process involving both frontend and backend technologies. When a user 
                uploads an image or video through the Embedded JS-based interface, the frontend first checks for size and format validity to ensure 
                compliance. Valid media is then passed to the Node.js backend, which wraps the metadata in JSON format and routes it to the Python-based 
                detection model. At this stage, Python libraries preprocess the media by resizing, denoising, and, in the case of videos, extracting frames. 
                These are analyzed using a Convolutional Neural Network (CNN) that compares visual patterns against labeled training data to determine if the 
                content is real or fake. The results, accompanied by accuracy scores and visual cues such as heatmaps, are returned to the user interface in 
                JSON format, giving clear and immediate feedback to the user in a reliable and secure manner.
            </p>
        </div> 
    </div>
</div>