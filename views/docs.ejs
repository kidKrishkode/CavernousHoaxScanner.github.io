<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta property="og:title" content="Cavernous Hoax Scanner">
    <meta property="og:image" content="../images/side-img.png" name="og:image">
    <meta itemprop="image" content="https://kidKrishkode.github.io/CavernousHoaxScanner.github.io/images/side-img.png">
    <meta property="og:site_name" content="Cavernous Hoax Scanner">
    <meta property="twitter:image"
        content="https://kidKrishkode.github.io/CavernousHoaxScanner.github.io/images/side-img.png">
    <meta property="twitter:card" content="summary_large_image">
    <meta property="twitter:title" content="Cavernous Hoax Scanner">
    <meta content="Cavernous Hoax Scanner (CHS) is a cutting-edge deepfake image & video detection platform also feature image compresser, image converter, image to pdf to ensure AI-powered media processing." lang="en-us" name="description"/>
    <meta content="Cavernous Hoax Scanner, Deepfake Detector, DFD, Image tool, deepfake, image editor, project, CNN, WHITE LOTUS" lang="en-us" name="keywords">
    <meta name="google-site-verification" content="s30Z0opKABJMHsTOIT6f6iSoYSQel63Iln-BPe81Ov4" />
    <title version="1.0">Cavernous Hoax Scanner</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="../public/App.css" />
    <link rel="stylesheet" href="../public/index.css" />
    <link rel="icon" href="../public/favicon.ico" />
</head>
<style>
    .desktop-view img {
        width: 95%;
        border-radius: 5px;
    }
    .desktop-view .s-img{
        width: 55%;
        position: relative;
        left: 15%;
    }
    .cool-table{
        width: 100%;
        border-collapse: collapse;
        overflow-x: auto;
        display: block;
        border-radius: 6px;
        th, td {
            border: 1px solid slategray;
            padding: 2px 4px;
            text-align: left;
        }
        thead {
            background-color: var(--charm);
            color: var(--venda);
            border-top-left-radius: 5px;
            border-top-right-radius: 5px;
            overflow: none;
        }
    }
    .flx .cool-table{
        width: 45%;
    }
    /* .info { background-color: #511f1f; color: white; }
    .success { background-color: #313172; color: white; }
    .redirect { background-color: #507e2f; color: white; }
    .client-error { background-color: #2c2c91; color: white; }
    .server-error { background-color: #2f7e73; color: white; } */
    @media only screen and (max-width: 900px), only screen and (min-width: 900px) and (max-width: 1200px){
        .flx .cool-table{
            width: 100%;
        }
    }
</style>
<body>
    <header id="header">
        <%= header %>
    </header>
    <section class="workspace" id="docsPage">
        <div class="big-gretter">
            <h6>WHITE LOTUS present</h6>
            <div class="header">
                <div class="flo">
                    <o>from CHS import </o><span>{media-Tech}</span>
                </div>quickly and easily
            </div>
            <p class="text-muted">Welcome to Cavernous Hoax Scanner, a cutting-edge tool designed to detect and analyze
                deepfake images. Deepfakes are synthetic media where a person in an existing image or video is replaced
                with someone else's likeness. With the increasing sophistication of deepfake technology, it's crucial to
                have reliable methods to identify and mitigate potential misuse.</p>
            <div class="flx">
                <div class="btn btn-process" onclick="route('/apiPlug')">Get your API</div>
                <div class="btn btn-invisible-process" onclick="route('/index')"><i class="fa fa-diamond"></i> Deepfake
                    Detection</div>
            </div>
            <div class="gretter-code-padd">
                <div class="robot">
                    <div class="message appear invisible">Ahoy hoy users, welcome to our document page, here you get the
                        manual of our service feature and some amazing notes!</div>
                </div>
                <div class="rocket"></div>
                <div class="gretter-code-marg">
                    <div class="flo gretter-code">
                        <ul class="code-option">
                            <li><i class="fa fa-clone"></i></li>
                            <li><i class="fa fa-code-fork"></i></li>
                            <li><i class="fa fa-lightbulb-o"></i></li>
                            <li><i class="fa fa-thumbs-o-up"></i></li>
                        </ul>
                        <div class="code-editor">
                            <div class="code-wrapper">
                                <pre class="code language-python" contenteditable="false" spellcheck="false"
                                    id="apiInSnipVanilla01">
                                    Py-Script Code
                                </pre>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="search-docs-head">
            <nav class="navbar navbar-light bg-light">
                <form class="form-inline" style="width: 300px;">
                    <div class="input-group" style="width: 100%;">
                        <div class="input-group-prepend">
                            <span class="btn input-group-text" id="basic-addon1"><i class="fa fa-search"></i></span>
                        </div>
                        <input type="search" class="form-control" id="searchData-docs" placeholder="Search Here"
                            aria-label="Search" aria-describedby="basic-addon"
                            onkeyup="search_product('searchData-docs','drop');">
                    </div>
                </form>
            </nav>
            <div class="flx">
                <span class="btn"><i class="fa fa-filter"></i> APIs</span>
                <span class="btn"><i class="fa fa-filter"></i> Web</span>
                <span class="btn"><i class="fa fa-filter"></i> CDN</span>
                <span class="btn"><i class="fa fa-filter"></i> Fundamentals</span>
                <span class="btn"><i class="fa fa-filter"></i> Tips</span>
            </div>
        </div>
        <ol class="search-product-data" id="docsList">
            <li class="drop">
                <div class="flx">
                    <div class="left-web">
                        <h2>CHS: Your Ultimate <span>Deepfake Detection</span> & <span>Media Processing</span> Solution
                        </h2>
                        <p>Cavernous Hoax Scanner (CHS) is a sophisticated tool for identifying deepfake images and
                            videos with accuracy. The name itself indicates that CHS is expert in the detection
                            of fake media, proving the authenticity of digital content. Its functionality, though,
                            doesn't stop there. CHS is also equipped with robust capabilities such as image
                            conversion, image compression, image-to-PDF conversion, and AI-driven image generation,
                            which makes it a handy media processing tool.
                            <br>
                            CHS is a final-year college project by Team White Lotus, created to cater to the increasing
                            issue of digital misinformation. The system consists of two parts:
                        </p>
                        <ul class="nostyle">
                            <li class="tic">CHS Web – An easy-to-use interface where users can upload and analyze media
                                in real-time.</li>
                            <li class="tic">CHS API – An API that is developer-friendly and enables easy integration of
                                CHS's deepfake detection and media processing capabilities into third-party
                                applications.</li>
                        </ul>
                        <p>With CHS, users can authenticate digital media with ease while taking advantage of other
                            tools for effective image handling and transformation.</p>
                    </div>
                    <div class="right-web">
                        <span class="desktop-view"><iframe src="/" alt="chs" class="desktop-view"
                                aria-disabled="true"></iframe></span>
                    </div>
                </div>
                <div class="btn btn-process">Try Now!</div>
            </li>
            <li class="drop">
                <div class="flx">
                    <div class="right-web swaped-right-web">
                        <span class="desktop-view"><iframe src="/converter" alt="chs" class="desktop-view"
                                aria-disabled="true"></iframe></span>
                    </div>
                    <div class="left-web">
                        <h2>More Than Just Deepfake Detection – <span>Explore</span> CHS's Powerful Features!</h2>
                        <p>Though CHS (Cavernous Hoax Scanner) is mostly aimed at deepfake image and video detection, it
                            has a variety of other media processing and artificial
                            intelligence-based services to offer. These are some of the things CHS presently has to
                            offer:
                        <ul class="nostyle">
                            <li class="tic">Image Compressor – Trims down image file size without sacrificing quality.
                            </li>
                            <li class="tic">Image Converter – Converts images from one format to another (e.g., PNG to
                                JPG, SVG to PNG, JPEG to PNG, etc.).</li>
                            <li class="tic">AI Image Generator – Generates images based on user-supplied text through
                                powerful AI models.</li>
                            <li class="tic">Image to PDF – Converts one or more user-uploaded images into PDFs.</li>
                            <li class="tic">Sentiment Analysis (API-based) – Identifies the sentiment and tone of any
                                given text.</li>
                            <li class="tic">Video to Image (API-based) – Unframe video file without sacrificing quality.
                            </li>
                        </ul>
                        <p>These are today's available features in CHS, but the system keeps on changing. The future
                            upgrades will improve current functions and bring in new, innovative features to further
                            empower CHS!</p>
                    </div>
                </div>
            </li>
            <li class="drop">
                <div class="flx">
                    <div class="left-web">
                        <h2>Just need to upload the media, <span>CHS</span> will convert it</h2>
                        <p>
                            The Cavernous Hoax Scanner (CHS) provides users with a seamless and efficient way to convert
                            media files with minimal effort.
                            Designed with simplicity in mind, the media converter feature allows users to transform
                            image files from one format to another
                            in just a few clicks. Upon navigating to the converter page, the user is prompted to drag
                            and drop the desired image file into
                            the interface. Once the file is uploaded, the user can select the target image extension
                            from a range of supported formats
                            such as JPG, PNG, SVG, BMP, and more.
                            <br>
                            After selecting the desired output format, the user simply clicks the “Process” button. If
                            the input file meets the format
                            and size requirements, CHS immediately processes the image and converts it into the chosen
                            format using optimized algorithms.
                            The converted file is then automatically downloaded to the user's device, eliminating the
                            need for additional steps or manual saving.
                            <br>
                            This feature is ideal for users who need quick, hassle-free image format conversion without
                            installing third-party software. Whether it's
                            for preparing assets for analysis, presentation, or general use, CHS ensures a smooth and
                            user-friendly experience that aligns with modern
                            usability standards.
                        </p>
                    </div>
                    <div class="right-web">
                        <span class="desktop-view"><img src="../images/s3.png" class="s-img" alt="chs"></span>
                    </div>
                </div>
                <div class="btn btn-process" onclick="route('/converter')">Try Now!</div>
            </li>
            <li class="drop">
                <div class="flx">
                    <div class="right-web">
                        <span class="desktop-view"><img src="../images/s6.png" alt="chs" class="s-img"></span>
                    </div>
                    <div class="left-web">
                        <h2>Media <span>Format</span> Policy: What You Need to Know Before Uploading</h2>
                        <p>Cavernous Hoax Scanner (CHS) is a powerful yet web-based deepfake detection platform, and
                            like any online system, it follows strict rules regarding media format to ensure security,
                            speed, and accuracy. These limitations are essential and come into play when users upload
                            their media files.</p>
                        <p>For images, CHS only accepts legitimate image files under specific guidelines:</p>
                        <ul class="nostyle">
                            <li class="tic">The uploaded file must genuinely be an image—not a disguised media file
                                pretending to be one.</li>
                            <li class="tic">Allowed extensions include: <strong>jpg, jpeg, png, gif, svg, bmp, webp,
                                    jfif, tga</strong> only.</li>
                            <li class="tic">Even if the extension is valid, CHS uses internal verification to block
                                tampered or fake image types.</li>
                            <li class="tic">Image size must fall between <strong>5KB</strong> and <strong>30MB</strong>,
                                regardless of resolution or aspect ratio.</li>
                        </ul>
                        <p>For videos, similar but slightly modified rules apply:</p>
                        <ul class="nostyle">
                            <li class="tic">The media must be a real video file and not just a renamed or malformed
                                file.</li>
                            <li class="tic">Accepted formats are: <strong>mp4, mov, webm, avi, mkv</strong> only.</li>
                            <li class="tic">CHS checks the authenticity of the content even if the extension appears
                                valid.</li>
                            <li class="tic">Video file sizes must range from <strong>20KB</strong> to
                                <strong>400MB</strong>.</li>
                        </ul>
                        <p>If the media complies with these requirements, CHS accepts the upload and begins the
                            preprocessing workflow seamlessly.</p>
                    </div>
                </div>
            </li>
            <li class="drop">
                <div class="flx">
                    <div class="left-web">
                        <h2>Process Hits Timeout Wall <span>10 Seconds</span> of API calling</h2>
                        <p>
                            In the current implementation of the Cavernous Hoax Scanner, one of the key technical
                            challenges encountered is the timeout limitation during API interactions.
                            Specifically, the system is designed to call external or internal APIs to process media
                            files for deepfake analysis. However, if the API does not respond within 10 seconds,
                            the process hits a hard timeout wall, terminating the operation prematurely. This timeout is
                            due to vercel serverless API dependencies.
                        </p>
                        <p>This bottleneck becomes critical when handling larger media files or when the scanning
                            process involves compute-intensive tasks such as frame-by-frame facial analysis, voice
                            spectral matching, or real-time AI inference. Once the 10-second threshold is crossed, the
                            user may face abrupt failures, incomplete scan results, or misleading errors "408".
                        </p>

                        <p>
                            To resolve this, options include implementing asynchronous handling using background workers
                            (e.g., Celery with Redis), increasing the timeout threshold at the server/API level,
                            or introducing staged processing with user notifications on progress. Optimizing the
                            processing pipeline and introducing a retry mechanism could also provide a smoother user
                            experience.
                            Proper logging and timeout error handling should be in place to ensure transparency and
                            easier debugging during production deployment.
                        </p>
                    </div>
                    <div class="right-web">
                        <span class="desktop-view"><img src="../images/s3.png" class="s-img" alt="chs"></span>
                    </div>
                </div>

            </li>
            <li class="drop">
                <div class="flx reverse-column">
                    <div class="left-api">
                        <div class="flo sample-code">
                            <ul class="code-option">
                                <li><i class="fa fa-clone" onclick="system.copyCode('#apiInSnipVanilla02');"></i></li>
                                <li><i class="fa fa-code-fork"
                                        onclick="system.downloadCode('#apiInSnipVanilla02','index.js');"></i></li>
                                <li><i class="fa fa-lightbulb-o"></i></li>
                                <li><i class="fa fa-thumbs-o-up"></i></li>
                            </ul>
                            <div class="code-editor">
                                <div class="code-wrapper">
                                    <pre class="code language-js" contenteditable="false" spellcheck="false"
                                        id="apiInSnipVanilla02">
                                        Java-Script Code
                                    </pre>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="right-api">
                        <h2>Don't, worry, you can <i class="fa fa-star prp small"></i><br> convert it easily and quickly
                            with <span>CHS API</span></h2>
                        <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Officia blanditiis provident
                            eligendi asperiores nihil! Repellat soluta eum exercitationem? Architecto, at! Aspernatur
                            exercitationem blanditiis et quia sed, reiciendis maxime alias, ad accusantium velit est
                            dolorum provident, corrupti sunt facere tenetur sequi!</p>
                        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Maxime modi soluta, quidem expedita
                            quasi quod cum aliquam rerum, corporis quisquam non, praesentium ea iure doloremque.</p>
                    </div>
                </div>
                <div class="btn btn-process">Try Now!</div>
            </li>
            <li class="drop"></li>
            <li class="drop">
                <div class="flx">
                    <div class="center-web">
                        <h2>CHS: <span>ERROR LOGs</span> & Solution</h2>
                        <p>An error log records issues encountered during a process. It includes two types:
                            <strong>custom errors</strong>, which are predefined by the CHS for specific issues, and
                            <strong>standard errors</strong>, which are default system-generated messages that indicate
                            common, expected issues.
                        </p>
                        <div class="flx">
                            <table class="cool-table">
                                <thead>
                                    <tr>
                                        <th>Code</th>
                                        <th>Description</th>
                                        <th>Solution</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td>0</td>
                                        <td>Invalid user input: empty field detected</td>
                                        <td>Retry with the Media</td>
                                    </tr>
                                    <tr>
                                        <td>1</td>
                                        <td>Unsupported media format</td>
                                        <td>Please try valid file type according to <a href="/docs?search='media format'">CHS</a></td>
                                    </tr>
                                    <tr>
                                        <td>2</td>
                                        <td>Image too large: maximum size exceeded</td>
                                        <td>Try with Media size according to <a href="/docs?search='media format'">CHS</a></td>
                                    </tr>
                                    <tr>
                                        <td>3</td>
                                        <td>Failed to compress image: unknown compression error</td>
                                        <td></td>
                                    </tr>
                                    <!-- <tr>
                                        <td>4</td>
                                        <td>Watermarking failed: unable to overlay text/image</td>
                                        <td></td>
                                    </tr> -->
                                    <tr>
                                        <td>5</td>
                                        <td>Face detection failed: no faces detected in image/video</td>
                                        <td></td>
                                    </tr>
                                    <tr>
                                        <td>6</td>
                                        <td>Video processing failed: unsupported video code</td>
                                        <td>Provided video file is corrupted </td>
                                    </tr>
                                    <tr>
                                        <td>7</td>
                                        <td>Image to PDF conversion failed: unable to generate PDF</td>
                                        <td>Please try again</td>
                                    </tr>
                                    <tr>
                                        <td>8</td>
                                        <td>Invalid video format: only MP4, AVI, and MOV are supported</td>
                                        <td>Try with Video Format according to <a href="/docs?search='media format'">CHS</a></td>
                                    </tr>
                                    <tr>
                                        <td>9</td>
                                        <td>Video too large: maximum size exceeded</td>
                                        <td>Try with Video size according to <a href="/docs?search='media format'">CHS</a></td>
                                    </tr>
                                    <tr>
                                        <td>10</td>
                                        <td>Failed to extract frames from video: unknown error</td>
                                        <td></td>
                                    </tr>
                                    <tr>
                                        <td>11</td>
                                        <td>Object detection failed: unable to detect objects in image/video</td>
                                        <td>Please give image with object</td>
                                    </tr>
                                    <tr>
                                        <td>12</td>
                                        <td>Image upload failed: unable to upload image to server</td>
                                        <td></td>
                                    </tr>
                                    <tr>
                                        <td>13</td>
                                        <td>Video upload failed: unable to upload video to server</td>
                                        <td></td>
                                    </tr>
                                    <tr>
                                        <td>14</td>
                                        <td>Image resizing failed: unable to resize image</td>
                                        <td></td>
                                    </tr>
                                    <tr>
                                        <td>15</td>
                                        <td>Video trimming failed: unable to trim video</td>
                                        <td></td>
                                    </tr>
                                    <tr>
                                        <td>16</td>
                                        <td>Image cropping failed: unable to crop image</td>
                                        <td></td>
                                    </tr>
                                    <tr>
                                        <td>17</td>
                                        <td>Video rotation failed: unable to rotate video</td>
                                        <td></td>
                                    </tr>
                                    <tr>
                                        <td>18</td>
                                        <td>Image filtering failed: unable to apply filter</td>
                                        <td></td>
                                    </tr>
                                    <tr>
                                        <td>19</td>
                                        <td>Video formatting failed: unable to format video</td>
                                        <td></td>
                                    </tr>
                                    <tr>
                                        <td>20</td>
                                        <td>Image optimization failed: unable to optimize image</td>
                                        <td></td>
                                    </tr>
                                    <tr>
                                        <td>21</td>
                                        <td>Video optimization failed: unable to optimize video</td>
                                        <td></td>
                                    </tr>
                                    <tr>
                                        <td>22</td>
                                        <td>Image size under conditions: unable to resize image</td>
                                        <td></td>
                                    </tr>
                                    <tr>
                                        <td>23</td>
                                        <td>Failed to process most recent task, You are in hosted mode but CHS API not
                                            connected with system, Try again later or report it</td>
                                        <td></td>
                                    </tr>
                                </tbody>
                            </table>
                            <table class="cool-table">
                                <thead>
                                    <tr><th>Code</th><th>Description</th><th>Category</th></tr>
                                </thead>
                                <tbody>
                                    <!-- 1XX Informational -->
                                    <tr class="info"><td>100</td><td>Continue</td><td>Informational</td></tr>
                                    <tr class="info"><td>101</td><td>Switching Protocols</td><td>Informational</td></tr>
                                    <tr class="info"><td>102</td><td>Processing</td><td>Informational</td></tr>

                                    <!-- 2XX Success -->
                                    <tr class="success"><td>200</td><td>OK <span style="opacity: 0;">OKOKOKOKOKOKOKOKOKOKOKOKOKOKOKOKOKOKOKOKOKOKOKOKOKOKOKOK</span></td><td>Success</td></tr>
                                    <tr class="success"><td>201</td><td>Created</td><td>Success</td></tr>
                                    <tr class="success"><td>202</td><td>Accepted</td><td>Success</td></tr>
                                    <tr class="success"><td>203</td><td>Non-authoritative Information</td><td>Success</td></tr>
                                    <tr class="success"><td>204</td><td>No Content</td><td>Success</td></tr>
                                    <tr class="success"><td>205</td><td>Reset Content</td><td>Success</td></tr>
                                    <tr class="success"><td>206</td><td>Partial Content</td><td>Success</td></tr>
                                    <tr class="success"><td>207</td><td>Multi-Status</td><td>Success</td></tr>
                                    <tr class="success"><td>208</td><td>Already Reported</td><td>Success</td></tr>
                                    <tr class="success"><td>226</td><td>IM Used</td><td>Success</td></tr>

                                    <!-- 3XX Redirection -->
                                    <tr class="redirect"><td>300</td><td>Multiple Choices</td><td>Redirection</td></tr>
                                    <tr class="redirect"><td>301</td><td>Moved Permanently</td><td>Redirection</td></tr>
                                    <tr class="redirect"><td>302</td><td>Found</td><td>Redirection</td></tr>
                                    <tr class="redirect"><td>303</td><td>See Other</td><td>Redirection</td></tr>
                                    <tr class="redirect"><td>304</td><td>Not Modified</td><td>Redirection</td></tr>
                                    <tr class="redirect"><td>305</td><td>Use Proxy</td><td>Redirection</td></tr>
                                    <tr class="redirect"><td>307</td><td>Temporary Redirect</td><td>Redirection</td></tr>
                                    <tr class="redirect"><td>308</td><td>Permanent Redirect</td><td>Redirection</td></tr>

                                    <!-- 4XX Client Error -->
                                    <tr class="client-error"><td>400</td><td>Bad Request</td><td>Client Error</td></tr>
                                    <tr class="client-error"><td>401</td><td>Unauthorized</td><td>Client Error</td></tr>
                                    <tr class="client-error"><td>402</td><td>Payment Required</td><td>Client Error</td></tr>
                                    <tr class="client-error"><td>403</td><td>Forbidden</td><td>Client Error</td></tr>
                                    <tr class="client-error"><td>404</td><td>Not Found</td><td>Client Error</td></tr>
                                    <tr class="client-error"><td>405</td><td>Method Not Allowed</td><td>Client Error</td></tr>
                                    <tr class="client-error"><td>406</td><td>Not Acceptable</td><td>Client Error</td></tr>
                                    <tr class="client-error"><td>407</td><td>Proxy Authentication Required</td><td>Client Error</td></tr>
                                    <tr class="client-error"><td>408</td><td>Request Timeout</td><td>Client Error</td></tr>
                                    <tr class="client-error"><td>409</td><td>Conflict</td><td>Client Error</td></tr>
                                    <tr class="client-error"><td>410</td><td>Gone</td><td>Client Error</td></tr>
                                    <tr class="client-error"><td>411</td><td>Length Required</td><td>Client Error</td></tr>
                                    <tr class="client-error"><td>412</td><td>Precondition Failed</td><td>Client Error</td></tr>
                                    <tr class="client-error"><td>413</td><td>Payload Too Large</td><td>Client Error</td></tr>
                                    <tr class="client-error"><td>414</td><td>Request-URI Too Long</td><td>Client Error</td></tr>
                                    <tr class="client-error"><td>415</td><td>Unsupported Media Type</td><td>Client Error</td></tr>
                                    <tr class="client-error"><td>416</td><td>Requested Range Not Satisfiable</td><td>Client Error</td></tr>
                                    <tr class="client-error"><td>417</td><td>Expectation Failed</td><td>Client Error</td></tr>
                                    <tr class="client-error"><td>418</td><td>I'm a teapot</td><td>Client Error</td></tr>
                                    <tr class="client-error"><td>421</td><td>Misdirected Request</td><td>Client Error</td></tr>
                                    <tr class="client-error"><td>422</td><td>Unprocessable Entity</td><td>Client Error</td></tr>
                                    <tr class="client-error"><td>423</td><td>Locked</td><td>Client Error</td></tr>
                                    <tr class="client-error"><td>424</td><td>Failed Dependency</td><td>Client Error</td></tr>
                                    <tr class="client-error"><td>426</td><td>Upgrade Required</td><td>Client Error</td></tr>
                                    <tr class="client-error"><td>428</td><td>Precondition Required</td><td>Client Error</td></tr>
                                    <tr class="client-error"><td>429</td><td>Too Many Requests</td><td>Client Error</td></tr>
                                    <tr class="client-error"><td>431</td><td>Request Header Fields Too Large</td><td>Client Error</td></tr>
                                    <tr class="client-error"><td>444</td><td>Connection Closed Without Response</td><td>Client Error</td></tr>
                                    <tr class="client-error"><td>451</td><td>Unavailable For Legal Reasons</td><td>Client Error</td></tr>
                                    <tr class="client-error"><td>499</td><td>Client Closed Request</td><td>Client Error</td></tr>

                                    <!-- 5XX Server Error -->
                                    <tr class="server-error"><td>500</td><td>Internal Server Error</td><td>Server Error</td></tr>
                                    <tr class="server-error"><td>501</td><td>Not Implemented</td><td>Server Error</td></tr>
                                    <tr class="server-error"><td>502</td><td>Bad Gateway</td><td>Server Error</td></tr>
                                    <tr class="server-error"><td>503</td><td>Service Unavailable</td><td>Server Error</td></tr>
                                    <tr class="server-error"><td>504</td><td>Gateway Timeout</td><td>Server Error</td></tr>
                                    <tr class="server-error"><td>505</td><td>HTTP Version Not Supported</td><td>Server Error</td></tr>
                                    <tr class="server-error"><td>506</td><td>Variant Also Negotiates</td><td>Server Error</td></tr>
                                    <tr class="server-error"><td>507</td><td>Insufficient Storage</td><td>Server Error</td></tr>
                                    <tr class="server-error"><td>508</td><td>Loop Detected</td><td>Server Error</td></tr>
                                    <tr class="server-error"><td>510</td><td>Not Extended</td><td>Server Error</td></tr>
                                    <tr class="server-error"><td>511</td><td>Network Authentication Required</td><td>Server Error</td></tr>
                                    <tr class="server-error"><td>599</td><td>Network Connect Timeout Error</td><td>Server Error</td></tr>
                                </tbody>
                            </table>
                        </div>

                    </div>
                </div>
            </li>
        </ol>
        <div class="search-not-found" id="searchData-docsDOD">
            <img src="../images/404.svg" alt="chs" />
        </div>
    </section>
    <div id="customerFeed" class="appear invisible">
        <%= feed %>
    </div>
    </section>
    <aside id="faq-help" class="appear hide">
        <%= faq %>
    </aside>
    <footer id="footer">
        <%= footer %>
    </footer>
</body>
<script src="../public/App.js"></script>
<script src="../public/default.min.js"></script>
<script>
    pageSet.push('header', 'docsPage', 'faq-help', 'footer');
    appearSet.push(['.message', 80], ['#customerFeed', 20], ['#faq-help', 1280]);
    currentPage.push('api');
    document.getElementById('header').innerHTML = document.getElementById('header').textContent;
    document.getElementById('footer').innerHTML = document.getElementById('footer').textContent;
    document.getElementById('faq-help').innerHTML = document.getElementById('faq-help').textContent;
    document.getElementById('customerFeed').innerHTML = document.getElementById('customerFeed').textContent;
</script>
<script>
    document.addEventListener("DOMContentLoaded", () => {
        const messages = [
            "Image Converter",
            "DeepFake Detection",
            "Image to PDF",
            "Face Morphism",
            "Image Compressor",
            "Sentiment Analysis"
        ];
        let index = 0;
        const spanElement = document.querySelector('.big-gretter .header span');
        const updateText = () => {
            spanElement.textContent = "";
            spanElement.style.display = "none";
            spanElement.classList.remove('typeEffect');
            void spanElement.offsetWidth;
            spanElement.classList.add('typeEffect');
            spanElement.textContent = messages[index];
            spanElement.style.display = "block";
            index = (index + 1) % messages.length;
        };
        updateText();
        setInterval(updateText, 9000);
    });
    setTimeout(() => {
        system.codeset('Docs 1', 'Node Js', 'apiInSnipVanilla01');
        system.codeset('Image Converter', 'Vanilla Js', 'apiInSnipVanilla02');
    }, 1000);

</script>
<script>
    const urlParams = new URLSearchParams(window.location.search);
    const searchParam = urlParams.get('search');
    if (searchParam != null) {
        document.getElementById('searchData-docs').value = searchParam;
        search_product('searchData-docs', 'drop');
    }
</script>

</html>