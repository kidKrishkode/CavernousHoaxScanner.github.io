<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta property="og:title" content="Cavernous Hoax Scanner">
    <meta property="og:image" content="../images/side-img.png" name="og:image">
    <meta itemprop="image" content="https://kidKrishkode.github.io/CavernousHoaxScanner.github.io/images/side-img.png">
    <meta property="og:site_name" content="Cavernous Hoax Scanner">
    <meta property="twitter:image" content="https://kidKrishkode.github.io/CavernousHoaxScanner.github.io/images/side-img.png">
    <meta property="twitter:card" content="summary_large_image">
    <meta property="twitter:title" content="Cavernous Hoax Scanner">
    <meta content="Cavernous Hoax Scanner (CHS) is a cutting-edge deepfake image & video detection platform also feature image compresser, image converter, image to pdf to ensure AI-powered media processing." lang="en-us" name="description"/>
    <meta content="Cavernous Hoax Scanner, Deepfake Detector, DFD, Image tool, deepfake, image editor, project, CNN, WHITE LOTUS" lang="en-us" name="keywords">
    <meta name="google-site-verification" content="s30Z0opKABJMHsTOIT6f6iSoYSQel63Iln-BPe81Ov4" />
    <title version="1.0">Image Compressor - Cavernous Hoax Scanner</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="../public/App.css"/>
    <link rel="icon" href="../public/favicon.ico"/>
</head>
<style>
    .selecter label{
        color: var(--lavender);
        font-weight: 600;
    }
    input[type="range"] {
        accent-color: var(--charm);
    }
    .selecter{
        width: 40%!important;
    }
    #rangevalue{
        width: 15%;
        color: #0c8ff0;
        background: transparent;
        border: none;
        user-select: none;
        outline: none;
    }
</style>
<body onload="compressor.engine_start();">
    <header id="header">
        <%= header %>
    </header>
    <section class="workspace" id="converterPage">
        <img src="../images/3d_donut.png" alt="chs" class="right-top-des"/>
        <h2>Image Compressor</h2>
        <div class="underline"></div>
        <div class="containers">
            <div class="drop-box">
                <div class="placeholder"><i class="fa fa-file-image-o" style="font-size: 30px;"></i><br>Drag and drop an image, or click to select</div>
                <div class="preview"></div>
                <input type="file" id="file-input" accept="image/*" name="file-input" onchange="compressor.engine_active();">
            </div>
        </div>
        <div class="progress-status">
            <div class="progress">Please wait a little..</div>
        </div>
        <div class="flx containers-option" id="op1">
            <div class="selecter">
                <label for="quality">Compress:</label>
                <input type="range" id="quality" name="quality" min="0" max="100" value="70" oninput="rangevalue.value=value"/>
                <input type="number" id="rangevalue" name="quality" min="0" max="100" value="70" oninput="quality.value=value"/>
            </div>
            <div class="process-btn">
                <div class="btn btn-process" onclick="process();">Process</div>
            </div>
        </div>
        <img src="../images/glow1.png" alt="chs" class="left-middle-des"/>
        <img src="../images/3d_atom.png" alt="chs" class="right-middle-des"/>
        <img src="../images/arrow_circle.png" alt="chs" class="left-bottom-des"/>
        <div class="glass-status flx" id="op2">
            <span class="head">Media Accepted:</span><span class="data" id="media-acc">No Media Found!</span>
        </div>
        <div class="glass-status" id="op3">
            <div class="flx">
                <span class="head">Media Type:</span><span class="data" id="media-type">Not Selected!</span>
            </div>
            <div class="flx">
                <span class="head">Media Size:</span><span class="data" id="media-size">Not Selected!</span>
            </div>
            <div class="flx">
                <span class="head">Media Extension:</span><span class="data" id="media-exc">Not Selected!</span>
            </div>
            <div class="flx">
                <span class="head">Media Dimantion:</span><span class="data" id="media-diamention">Not Selected!</span>
            </div>
        </div>
        <div class="htsi appear hide" id="op4">
            <h2>How to Use it.</h2>
            <div class="underline"></div>
            <div class="card-group flo">
                <div class="card">
                    <h4 class="card-title"><span>1</span> Drop your Image</h4>
                    <p class="card-text text-muted">Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptas excepturi facilis libero natus ipsam neque expedita soluta ipsum assumenda unde?</p>
                </div>
                <div class="card">
                    <h4 class="card-title"><span>2</span> Media Get Permite</h4>
                    <p class="card-text text-muted">Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptas excepturi facilis libero natus ipsam neque expedita soluta ipsum assumenda unde?</p>
                </div>
            </div>
            <div class="card-group flo">
                <div class="card">
                    <h4 class="card-title"><span>3</span> Hit The Process</h4>
                    <p class="card-text text-muted">Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptas excepturi facilis libero natus ipsam neque expedita soluta ipsum assumenda unde?</p>
                </div>
                <div class="card">
                    <h4 class="card-title"><span>4</span> Download New Image</h4>
                    <p class="card-text text-muted">Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptas excepturi facilis libero natus ipsam neque expedita soluta ipsum assumenda unde?</p>
                </div>
            </div>
        </div>
        <div id="moreProduct" class="appear hide">
            <%= services %>
        </div>
        <div id="customerFeed">
            <%= feed %>
        </div>
    </section>
    <aside id="faq-help" class="appear hide">
        <%= faq %>
    </aside>
    <footer id="footer">
        <%= footer %>
    </footer>
</body>
<script src="../public/App.js"></script>
<script src="../public/default.min.js"></script>
<script>
    pageSet.push('header','converterPage','moreProduct', 'faq-help', 'footer');
    appearSet.push(['.htsi',380],['#moreProduct',580], ['#faq-help', 980]);
    currentPage.push('compressor');
    document.getElementById('header').innerHTML = document.getElementById('header').textContent;
    document.getElementById('footer').innerHTML = document.getElementById('footer').textContent;
    document.getElementById('moreProduct').innerHTML = document.getElementById('moreProduct').textContent;
    document.getElementById('faq-help').innerHTML = document.getElementById('faq-help').textContent;
    document.getElementById('customerFeed').innerHTML = document.getElementById('customerFeed').textContent;

    function directUpload(file){
        let quality = document.getElementById('rangevalue').value.toLowerCase();
        const reader = new FileReader();
        reader.readAsDataURL(file);
        reader.onload = function(){
            const imageData = reader.result;
            fetch('/compressor/process', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({quality, imageData})
            }).then(response => response.json()).then(data => {
                afterResponce(data, quality);
            }).catch(e=>console.log(e));
        }
    }
    function process(){
        let fileInput = document.getElementById('file-input');
        if(fileInput.files.length!=0){
            const file = fileInput.files[0];
            document.querySelector('.progress-status').style.display = 'block';
            system.block_resource({input: "file-input", selector: ["quality","rangevalue"]});
            if(document.getElementById('media-size').textContent.replace('Kb','')*1 > 900){
                compressAndUpload(file, document.getElementById('media-size').textContent.replace('Kb','')*1);
            }else{
                directUpload(file);
            }
        }
    }
    let required_size=0;
    function compressAndUpload(file, size){
        const singlePartsAPI = eval(config.hex.singlePartsAPI);
        let limit = Math.floor(size/900)+2;
        const quality = document.getElementById('rangevalue').value.toLowerCase();
        const reader = new FileReader();
        reader.readAsDataURL(file);
        reader.onload = function(){
            const imageData = reader.result;
            compressBase64Image(imageData).then(compressed_imageData => {
                limit = Math.floor(getBase64SizeKB(compressed_imageData)/900)+2;
                singlePartsAPI('/load/single', compressed_imageData, limit).then((result) => {
                    const new_quality = (size * quality)/getBase64SizeKB(compressed_imageData);
                    required_size = size * (quality/100);
                    fetch('/compressor/process', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            quality: Math.floor(new_quality+1/compressRegulator(new_quality)),
                            img: '',
                            load: 'true'
                        })
                    }).then(response => response.json()).then(data => {
                        afterResponce(data, quality);
                    });
                }).catch((error) => {
                    console.log("Error sending parts:", error);
                });
            });
        }
    }
    function afterResponce(data, quality){
        if(typeof data.error !== "undefined"){
            return system.handelPyError(data.error);
        }
        console.log(data);
        let extension = document.getElementById('media-exc').textContent;
        if(required_size!=0){
            increaseBase64Size(data.result, Math.floor(required_size), extension).then((increased_ImageData)=>{
                document.querySelector('.preview').innerHTML = `<img src=${increased_ImageData} alt='loading' id="dimg"/>`;
                system.downloadImage('dimg','chs'+'_'+(new Date().getTime())+'.'+extension);
            }).catch((error) => {
                console.log("Image increasing failed!");
            });
        }else{
            document.querySelector('.preview').innerHTML = `<img src=${JSON.stringify(data.result,null,2)} alt='loading' id="dimg"/>`;
            system.downloadImage('dimg','chs'+'_'+(new Date().getTime())+'.'+extension);
        }
        document.getElementById('op1').innerHTML = `
            <div class="btn btn-process" onclick="route('');"><i class="fa fa-long-arrow-left"></i> Try with another</div>
            <div class="btn btn-info" onclick="system.downloadImage('dimg','chs'+'_'+(${new Date().getTime()})+'.'+'${extension}');"><i class="fa fa-download"></i> Download</div>
        `;
        document.getElementById('op2').style.display = 'none';
        document.getElementById('op3').style.display = 'none';
        document.getElementById('op4').style.display = 'none';
        document.getElementById('file-input').disabled = true;
        document.querySelector('.progress-status').style.display = 'none';
    }
</script>
</html>